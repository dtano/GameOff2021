using UnityEngine;

public class Inventory Manager : MonoBehaviour
{
    [SerializeField] ShopInventory shopInventory;
    [SerializeField] BackpackInventory backpackSlot;

    private void Awake()
    {
        shopInventory.OnItemRightClickedEvent += EquipFromInventory;
    }

    private void EquipFromInventory (Item item)
    {
        if (item is EquippableItem)
        {
            Equip((EquippableItem)item);
        }
    }

    public void Equip(EquippableItem item)
    {
        if (shopInventory.RemoveItem(item))
        {
            EquippableItem previousItem;
            if (backpackSlot.AddItem(item, out previousItem))
            {
                if (previousItem != null)
                {
                    shopInventory.AddItem(previousItem);
                }
            }
            else
            {
                shopInventory.AddItem(item);
            }
        }
    }

    public void Unequip(EquippableItem item)
    {
        if (!shopInventory.IsFull() && backpackSlot.RemoveItem(item))
        {
            shopInventory.AddItem(item);
        }
    }

}
